@page "/weather"
@using System.Security.Cryptography.X509Certificates
@inject HttpClient Http

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (weatherData == null)
{
    <p><em>Loading...</em></p>
}
else
{
	<table class="table">
		<h2>Weather Now</h2>
		<thead>
		<tr>
			<th>Temperature</th>
			<th>Wind</th>
			<th>Description</th>
		</tr>
		</thead>
		<tbody>
		<tr>
			<td>@weatherData.Temperature</td>
			<td>@weatherData.Wind</td>
			<td>@weatherData.Description</td>
			
		</tr>
		</tbody>
	</table>
}
    <table class="table">
        <thead>
            <tr>
	            <th>Day</th>
	            <th>Temperature</th>
	            <th>Wind</th>
                
                
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in weatherData.Forecast)
            {
                <tr>
                    <td>@forecast.Day</td>
                    <td>@forecast.Temperature</td>
                    <td>@forecast.Wind</td>
                    
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherData? weatherData;

    protected override async Task OnInitializedAsync()
    {
        weatherData = await Http.GetFromJsonAsync<WeatherData>("https://goweather.herokuapp.com/weather/sheffield");
    }

    public class WeatherData
    {
        public string Temperature { get; set; }

        public string Wind { get; set; }

        public string Description { get; set; }

        public List<Forecast> Forecast { get; set; }

      
    }

    public class Forecast
    {
		public string Day { get; set; }
		public string Temperature { get; set; }
		public string Wind { get; set; }

    }


}
